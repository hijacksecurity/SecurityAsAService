name: SAST Security Control

on:
  workflow_call:
    inputs:
      image:
        description: 'Docker image for SAST tool'
        required: false
        type: string
        default: 'semgrep/semgrep:latest'

jobs:
  SASTScan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run SAST scan
        run: |
          # Create results directory
          mkdir -p results
          
          # Official semgrep image runs as root, custom images can use non-root
          USER_FLAG=""
          if [[ "${{ inputs.image }}" != *"semgrep/semgrep"* ]]; then
            USER_FLAG="--user $(id -u):$(id -g)"
          fi
          
          # Run SAST scan with SARIF output
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/src" \
            -w /src \
            $USER_FLAG \
            ${{ inputs.image }} \
            semgrep scan \
              --config=auto \
              --sarif --output=results/sast-results.sarif || echo "SARIF generation completed with exit code $?"
            
          # Run SAST scan with JSON output  
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/src" \
            -w /src \
            $USER_FLAG \
            ${{ inputs.image }} \
            semgrep scan \
              --config=auto \
              --json --output=results/sast-results.json || echo "JSON generation completed with exit code $?"
            
          # Run SAST scan with JUnit XML output
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/src" \
            -w /src \
            $USER_FLAG \
            ${{ inputs.image }} \
            semgrep scan \
              --config=auto \
              --junit-xml --output=results/sast-results.xml || echo "JUnit XML generation completed with exit code $?"
              
          # Run SAST scan with HTML output
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/src" \
            -w /src \
            $USER_FLAG \
            ${{ inputs.image }} \
            semgrep scan \
              --config=auto \
              --dataflow-traces \
              --output=results/sast-report.html || echo "HTML report generation completed with exit code $?"
              
          # Fix permissions if running as root (official image)
          if [[ "${{ inputs.image }}" == *"semgrep/semgrep"* ]]; then
            sudo chown -R $(id -u):$(id -g) results/ || true
          fi
        
      - name: Upload to GitHub Security tab
        if: always() && hashFiles('results/sast-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/sast-results.sarif
          category: sast
          
      - name: Publish JUnit Test Results
        if: always() && hashFiles('results/sast-results.xml') != ''
        uses: dorny/test-reporter@v1
        with:
          name: SAST Security Tests
          path: results/sast-results.xml
          reporter: java-junit
          
      - name: Upload SAST results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sast-results
          path: |
            results/sast-results.sarif
            results/sast-results.json
            results/sast-results.xml
            results/sast-report.html
          if-no-files-found: warn